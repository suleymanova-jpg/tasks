def min_path_sum(grid):
    rows, cols = len(grid), len(grid[0])
    
    # Dinamik proqramlaşdırma üçün DP matrisi
    dp = [[0] * cols for _ in range(rows)]
    
    # Başlanğıc nöqtəni təyin edirik
    dp[0][0] = grid[0][0]
    
    # İlk sütun üçün cəmi hesablayırıq
    for i in range(1, rows):
        dp[i][0] = dp[i-1][0] + grid[i][0]
    
    # İlk sətir üçün cəmi hesablayırıq
    for j in range(1, cols):
        dp[0][j] = dp[0][j-1] + grid[0][j]
    
    # DP matrisi doldurulması (hər hüceyrə sol və yuxarıdan gələn minimum cəmi alır)
    for i in range(1, rows):
        for j in range(1, cols):
            dp[i][j] = min(dp[i-1][j], dp[i][j-1]) + grid[i][j]
    
    return dp[-1][-1]

# Test nümunələri
print(min_path_sum([[1, 4, 5], [2, 7, 6], [6, 8, 7]]))  # Output: 23
print(min_path_sum([[1, 3, 6], [5, 8, 12]]))  # Output: 22
print(min_path_sum([[5]]))  # Output: 5
